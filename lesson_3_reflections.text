1.When would you want to use a remote repository rather than keeping all your work local?
You would want to see a remote repository when working in teams, so other members can see changes that are taking place for the 
task

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
 You may want to pull changes manually because you will be have control of when the changes are pulled. If they are automatically pulled,
you run the risk of them being pulled when you are not ready for that to happen.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?
A clone is a copy of a repository and is used to 

A fork is a copied repository on your gitHub account it is not on your local machine. A clone is a copy of the repository of 
which you have 2 copies(1 on your gitHub account and 1 on your personal machine. By having the clone you can begin to contribute
to the project but will have to push the updates to the github account. A branch is used to keep lines of development separate
and is used to enhance projects that are already working or in use. A branch allows you to work on that development to test it 
while keeping the current code untouched.

4.What is the benefit of having a copy of the last known state of the remote stored locally?

If you are making changes to the current version and you introduce an error, you can easily convert back to 
the original configuration without going through process of pulling it down especially if its a large file.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You could collaborate by working in the same room and verbally communicating changes. Git or Github would be easier, 
verbally communicating change would be hard to keep track of.

6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each 
approach have?

You would want to make changes in a separate branch when you are working to enhance a working file in one way or another.

By making the changes in the separate branch you leave the master working in its current firm until the enhancement has 
been implemented and verified to work properly.